{
  "problem_id": "HumanEval_125_split_words",
  "prompt": "from typing import Union, List\n\ndef split_words(txt: str) -> Union[List[str], int]:\n    \"\"\"\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    >>> split_words('Hello world!')\n    ['Hello', 'world!']\n    >>> split_words('Hello,world!')\n    ['Hello', 'world!']\n    >>> split_words('abcdef')\n    3\n    \"\"\"",
  "completions": [
    "\n    return txt.split() if txt.count(' ') > 0 else ord('a')\n",
    "\n    if txt.isspace():\n        return txt.split()\n    elif len(txt) == 0:\n        return 0\n    elif ord(txt[0]) == ord('a'):\n        return ord(txt[0]) - ord('a')\n    else:\n        return len(txt) - ord(txt[0])\n",
    "\n    if txt.isspace():\n        return txt.split()\n    elif ord('a') <= ord(txt[0]) <= ord('z'):\n        return [txt[0]]\n    elif ord('A') <= ord(txt[0]) <= ord('Z'):\n        return [ord(txt[0]) - ord('A')]\n    else:\n        return 0\n",
    "\n    if txt.isspace():\n        return 0\n    return ord(txt[0]) - ord('a')\n",
    "\n    words = txt.split()\n    if len(words) == 0:\n        return 0\n    elif len(words) == 1:\n        return ord(words[0])\n    else:\n        return len(words) - 1\n",
    "\n    if txt == '':\n        return 0\n    if txt.isalpha():\n        return ord(txt[0]) - ord('a')\n    return len(txt) - 1\n",
    "\n    if txt.isspace():\n        return [txt]\n    elif txt.count(',') > 0:\n        return [txt[0]] + [txt[i] for i in range(1, len(txt)) if txt[i].isspace()]\n    else:\n        return [ord(c) for c in txt]\n",
    "\n    words = txt.split()\n    if len(words) == 0:\n        return 0\n    if len(words) == 1:\n        return ord(words[0])\n    return ord(words[0]) - ord('a') + 1\n",
    "\n    if txt.isspace():\n        return [txt]\n    return [txt[i:i+1] for i in range(len(txt)-1) if txt[i] != txt[i+1]]\n",
    "\n    return [word.strip() for word in txt.split(' ')] if txt.strip() else [ord(c) for c in txt]\n",
    "\n    words = txt.split()\n    if len(words) == 0:\n        return 0\n    return len(set(words))\n",
    "\n    if txt == '':\n        return 0\n    return [txt[i] for i in range(len(txt)) if txt[i] != ' ']\n",
    "\n    if txt is None:\n        return None\n    if txt.isspace():\n        return 0\n    if txt.isdigit():\n        return int(txt)\n    return [txt]\n",
    "\n    words = txt.split()\n    if len(words) == 0:\n        return 0\n    if len(words) == 1:\n        return ord(words[0]) - ord('a')\n    return len(words) - 1\n",
    "\n    if not txt:\n        return 0\n    if txt[0] == ' ':\n        return 1\n    if txt[0] == ',':\n        return 2\n    return 1 + split_words(txt[1:])\n",
    "\n    if txt.isspace():\n        return txt.split()\n    else:\n        return [txt[i:i+1] for i in range(len(txt)) if txt[i] != ' ']\n",
    "\n    if txt.isspace():\n        return [txt]\n    elif ord(txt[0]) == ord('a'):\n        return [ord(txt[0]) - ord('a')]\n    elif ord(txt[0]) == ord('b'):\n        return [ord(txt[0]) - ord('b')]\n    elif ord(txt[0]) == ord('c'):\n        return [ord(txt[0]) - ord('c')]\n    elif ord(txt[0]) == ord('d'):\n        return [ord(txt[0]) - ord('d')]\n    elif ord(txt[0]) == ord('e'):\n        return [ord(txt[0]) - ord('e')]\n    elif ord(txt[0]) == ord('f'):\n        return [ord(txt[0]) - ord('f')]\n    else:\n        return [ord(txt[0]) - ord('a')]\n",
    "\n    if txt.isspace():\n        return txt.split()\n    elif ord('a') <= ord(txt[0]) <= ord('z'):\n        return [txt[0]]\n    elif ord('A') <= ord(txt[0]) <= ord('Z'):\n        return [txt[0]] + [ord(txt[0]) - ord('A')]\n    else:\n        return [ord(txt[0]) - ord('a')]\n",
    "\n    if txt.isspace():\n        return 0\n    if ord(txt[0]) == 0:\n        return 1\n    return ord(txt[0]) - ord('a') + 1\n",
    "\n    if txt == '':\n        return 0\n    return [x.strip() for x in txt.split(' ')]\n"
  ]
}