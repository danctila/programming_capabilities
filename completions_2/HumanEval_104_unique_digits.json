{
  "problem_id": "HumanEval_104_unique_digits",
  "prompt": "from typing import List\n\ndef unique_digits(x: List[int]) -> List[int]:\n    \"\"\"Given a list of positive integers x. return a sorted list of all \n    elements that hasn't any even digit.\n\n    Note: Returned list should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15, 33, 1422, 1])\n    [1, 15, 33]\n    >>> unique_digits([152, 323, 1422, 10])\n    []\n    \"\"\"",
  "completions": [
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(x, key=lambda x: x % 10)\n\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(x, key=lambda x: x % 10)\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n",
    "\n    return sorted(set(x))\n"
  ]
}