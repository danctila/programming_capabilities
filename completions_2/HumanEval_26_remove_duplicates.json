{
  "problem_id": "HumanEval_26_remove_duplicates",
  "prompt": "from typing import List\n\ndef remove_duplicates(numbers: List[int]) -> List[int]:\n    \"\"\" From a list of integers, remove all elements that occur more than once.\n    Keep order of elements left the same as in the input.\n    >>> remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"",
  "completions": [
    "\n    return list(set(numbers))\n",
    "\n    seen = set()\n    for num in numbers:\n        if num not in seen:\n            seen.add(num)\n            numbers.remove(num)\n    return numbers\n",
    "\n    if not numbers:\n        return []\n    for i in range(len(numbers)):\n        for j in range(i + 1, len(numbers)):\n            if numbers[i] == numbers[j]:\n                numbers.pop(j)\n    return numbers\n",
    "\n    new_list = []\n    for i in numbers:\n        if i not in new_list:\n            new_list.append(i)\n    return new_list\n",
    "\n    return [number for number in numbers if numbers not in numbers[:1]]\n",
    "\n    seen = set()\n    for num in numbers:\n        if num not in seen:\n            seen.add(num)\n            numbers.remove(num)\n    return numbers\n",
    "\n    seen = set()\n    for num in numbers:\n        if num in seen:\n            continue\n        seen.add(num)\n        numbers.remove(num)\n    return numbers\n",
    "\n    seen = set()\n    for num in numbers:\n        if num in seen:\n            continue\n        seen.add(num)\n        numbers.remove(num)\n    return numbers\n",
    "\n    seen = set()\n    for num in numbers:\n        if num in seen:\n            continue\n        seen.add(num)\n        numbers.remove(num)\n    return numbers\n",
    "\n    seen = set()\n    for n in numbers:\n        if n not in seen:\n            seen.add(n)\n            numbers.remove(n)\n    return numbers\n",
    "\n    seen = set()\n    for num in numbers:\n        if num not in seen:\n            seen.add(num)\n            numbers.remove(num)\n    return numbers\n",
    "\n    seen = set()\n    return [i for i in numbers if i not in seen]\n",
    "\n    # TODO: implement this function\n    return numbers\n\n",
    "\n    seen = set()\n    for num in numbers:\n        if num in seen:\n            continue\n        seen.add(num)\n        numbers.remove(num)\n    return numbers\n",
    "\n    seen = set()\n    for num in numbers:\n        if num not in seen:\n            seen.add(num)\n            numbers.remove(num)\n    return numbers\n",
    "\n    if len(numbers) == 0:\n        return []\n    if len(numbers) == 1:\n        return numbers\n    if len(numbers) == 2:\n        return [numbers[0], numbers[1]]\n    else:\n        return [numbers[0]] + remove_duplicates(numbers[1:])\n",
    "\n    seen = set()\n    return [i for i in numbers if i not in seen and seen.add(i)]\n",
    "\n    return [i for i in numbers if numbers.count(i) == 1]\n",
    "\n    seen = set()\n    return list(filter(lambda x: x not in seen, numbers))\n",
    "\n    seen = set()\n    return [i for i in numbers if i not in seen]\n"
  ]
}