{
  "problem_id": "HumanEval_5_intersperse",
  "prompt": "from typing import List\n\ndef intersperse(numbers: List[int], delimeter: int) -> List[int]:\n    \"\"\" Insert a number 'delimeter' between every two consecutive elements of input list `numbers'\n    >>> intersperse([], 4)\n    []\n    >>> intersperse([1, 2, 3], 4)\n    [1, 4, 2, 4, 3]\n    \"\"\"",
  "completions": [
    "\n    return [numbers[i] + [numbers[i + delimeter]] for i in range(len(numbers) - delimeter + 1)]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter + numbers[i + 1] for i in range(len(numbers) - 1)]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter + numbers[i + 1] for i in range(len(numbers) - 1)]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter + numbers[i + 1] for i in range(len(numbers) - 1)]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter + numbers[i + 1] for i in range(len(numbers) - 1)]\n",
    "\n    return [numbers[i] + [numbers[i + 1]] for i in range(len(numbers) - 1, -1, -1)]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter + numbers[i + 1] for i in range(len(numbers) - 1)]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n",
    "\n    return [numbers[i] + delimeter for i in range(len(numbers))]\n"
  ]
}