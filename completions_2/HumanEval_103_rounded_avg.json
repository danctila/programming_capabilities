{
  "problem_id": "HumanEval_103_rounded_avg",
  "prompt": "from typing import Union\n\ndef rounded_avg(n: int, m: int) -> Union[str, int]:\n    \"\"\"You are given two positive integers n and m, and your task is to compute the\n    average of the integers from n through m (including n and m). \n    Round the answer to the nearest integer and convert that to binary.\n    If n is greater than m, return -1.\n    Example:\n    >>> rounded_avg(1, 5)\n    '0b11'\n    >>> rounded_avg(7, 5)\n    -1\n    >>> rounded_avg(10, 20)\n    '0b1111'\n    >>> rounded_avg(20, 33)\n    '0b11010'\n    \"\"\"",
  "completions": [
    "\n    return str(bin(int(n, 2) + int(m, 2)))[2:]\n",
    "\n    if n > m:\n        return -1\n    else:\n        return bin(int(n, 2) + int(m, 2))[2:]\n",
    "\n    if n > m:\n        return -1\n    return bin(int(n) + int(m))[-3:]\n",
    "\n    if n > m:\n        return -1\n    return bin(int(n, 2) + int(m, 2))[-1]\n",
    "\n    if n > m:\n        return -1\n    return bin(int(n, 2) + int(m, 2))[2:]\n",
    "\n    if n > m:\n        return -1\n    return bin(int(n, 2) + int(m, 2))[-1]\n",
    "\n    if n > m:\n        return -1\n    return bin(int(n, 2) + int(m, 2))[2:]\n",
    "\n    return int(bin(n + m)[2:], 2)\n",
    "\n    if n > m:\n        return -1\n    else:\n        return bin(int(n, 2) + int(m, 2))[2:]\n",
    "\n    if n > m:\n        return -1\n    if n == m:\n        return '0b1'\n    if n < m:\n        return '0b0'\n    return bin(int(n, 2) + int(m, 2))[2:]\n",
    "\n    if n > m:\n        return -1\n    if n == m:\n        return '0b1'\n    if n < m:\n        return '0b0'\n    return '0b' + str(int(n / m) + 1)\n",
    "\n    if n > m:\n        return -1\n    return bin(int(n, 2) + int(m, 2))[2:]\n",
    "\n    if n > m:\n        return -1\n    if n == m:\n        return '0b00'\n    if n < m:\n        return '0b11'\n    return '0b' + str(int(n / m) * 2 ** (m - n))\n",
    "\n    if n > m:\n        return -1\n    else:\n        return bin(int(n) + int(m))[-1]\n",
    "\n    if n > m:\n        return -1\n    return bin(int(n, 2) + int(m, 2))[2:]\n",
    "\n    if n > m:\n        return -1\n    if n == m:\n        return '0b1'\n    return str(bin(n + m - 1))[-1]\n",
    "\n    return bin(int(str(n) + str(m), 2)[-1])[2:]\n",
    "\n    if n > m:\n        return -1\n    if n == m:\n        return '0b1'\n    return bin(int(n, 10) + int(m, 10))[-1]\n",
    "\n    if n > m:\n        return -1\n    return bin(int(n, 2) + int(m, 2))[2:]\n",
    "\n    if n > m:\n        return -1\n    if n == m:\n        return '0b00'\n    if n < m:\n        return '0b11'\n    return '0b' + str(int(n / m))\n"
  ]
}