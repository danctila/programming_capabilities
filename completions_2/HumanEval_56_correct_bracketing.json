{
  "problem_id": "HumanEval_56_correct_bracketing",
  "prompt": "def correct_bracketing(brackets: str) -> bool:\n    \"\"\" brackets is a string of \"<\" and \">\".\n    return True if every opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing('<')\n    False\n    >>> correct_bracketing('<>')\n    True\n    >>> correct_bracketing('<<><>>')\n    True\n    >>> correct_bracketing('><<>')\n    False\n    \"\"\"",
  "completions": [
    "\n    brackets = brackets.replace('<', '>')\n    brackets = brackets.replace('>', '<')\n    return brackets == brackets.replace('>', '<')\n\n",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    if not brackets:\n        return False\n\n    brackets_map = {\n        '<': '>',\n        '>': '<',\n    }\n\n    for bracket in brackets:\n        if bracket not in brackets_map:\n            return False\n        brackets_map[bracket] = brackets_map[bracket]\n\n    return True\n\n",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets_list = brackets.split('>')\n    for bracket in brackets_list:\n        if bracket == '<':\n            if brackets_list.index(bracket) == 0:\n                return False\n        elif bracket == '>':\n            if brackets_list.index(bracket) == len(brackets_list) - 1:\n                return False\n    return True\n\n",
    "\n    brackets_map = {\n        '<': '>',\n        '>': '<',\n    }\n    for bracket in brackets:\n        if bracket not in brackets_map:\n            return False\n    return True\n\n",
    "\n    if not brackets:\n        return False\n    if len(brackets) == 1:\n        return brackets == '<'\n    if brackets[-1] == '>':\n        return brackets[:-1] == '>'\n    return brackets == '<'\n\n",
    "\n    brackets_map = {\n        '<': '>',\n        '>': '<',\n    }\n\n    for bracket in brackets:\n        if bracket not in brackets_map:\n            return False\n\n    return True\n\n",
    "\n    if not brackets:\n        return False\n    if brackets[0] == '<':\n        return brackets[1] == '>'\n    return False\n\n",
    "\n    if brackets == '<>':\n        return True\n    else:\n        return False\n\n",
    "\n    brackets_dict = {\n        '<': '>',\n        '>': '<'\n    }\n    for bracket in brackets:\n        if bracket not in brackets_dict:\n            return False\n    return True\n\n",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets = brackets.replace('<', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('>', '",
    "\n    if brackets == '<>':\n        return True\n    if brackets == '<>':\n        return False\n    if brackets == '><<>>':\n        return True\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets == '><<>>':\n        return False\n    if brackets ==",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets_list = brackets.split('>')\n    for bracket in brackets_list:\n        if bracket == '<':\n            if brackets_list.index(bracket) == 0:\n                return False\n        elif bracket == '>':\n            if brackets_list.index(bracket) == len(brackets_list) - 1:\n                return False\n        else:\n            return False\n    return True\n\n",
    "\n    brackets = brackets.split('>')\n    for bracket in brackets:\n        if bracket == '<':\n            if brackets.index(bracket) == 0:\n                return False\n        elif bracket == '>':\n            if brackets.index(bracket) == len(brackets) - 1:\n                return False\n        else:\n            return False\n    return True\n\n"
  ]
}