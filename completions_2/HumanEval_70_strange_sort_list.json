{
  "problem_id": "HumanEval_70_strange_sort_list",
  "prompt": "from typing import List\n\ndef strange_sort_list(lst: List[int]) -> List[int]:\n    \"\"\"\n    Given list of integers, return list in strange order.\n    Strange sorting, is when you start with the minimum value,\n    then maximum of the remaining integers, then minimum and so on.\n\n    Examples:\n    >>> strange_sort_list([1, 2, 3, 4])\n    [1, 4, 2, 3]\n    >>> strange_sort_list([5, 5, 5, 5])\n    [5, 5, 5, 5]\n    >>> strange_sort_list([])\n    []\n    \"\"\"",
  "completions": [
    "\n    return sorted(lst, reverse=True)\n",
    "\n    if len(lst) == 0:\n        return []\n    if len(lst) == 1:\n        return lst\n    if len(lst) == 2:\n        return lst\n    if lst[0] > lst[1]:\n        return lst\n    return strange_sort_list(lst[1:]) + lst[:1]\n",
    "\n    if len(lst) == 0:\n        return []\n    if len(lst) == 1:\n        return lst\n    return sorted(lst)[::-1]\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n\n",
    "\n    if len(lst) == 0:\n        return []\n    if len(lst) == 1:\n        return lst\n    return strange_sort_list(lst[1:]) + [lst[0]] + strange_sort_list(lst[1:])\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return list(reversed(sorted(lst)))\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n",
    "\n    return sorted(lst, reverse=True)\n"
  ]
}