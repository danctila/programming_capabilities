{
  "problem_id": "HumanEval_151_double_the_difference",
  "prompt": "from typing import List\n\ndef double_the_difference(lst: List[float]) -> int:\n    \"\"\"\n    Given a list of numbers, return the sum of squares of the numbers\n    in the list that are odd. Ignore numbers that are negative or not integers.\n    \n    >>> double_the_difference([1, 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>> double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n    0\n   \n    If the input list is empty, return 0.\n    \"\"\"",
  "completions": [
    "\n    if not lst:\n        return 0\n    else:\n        return sum(lst) ** 2 - sum(lst) ** 2 // 2\n",
    "\n    if not lst:\n        return 0\n    return sum(x * x for x in lst if x % 2 != 0)\n",
    "\n    if not lst:\n        return 0\n    return sum(i * i for i in lst if i % 2 == 1)\n",
    "\n    if not lst:\n        return 0\n    return sum(map(lambda x: x**2, lst))\n",
    "\n    if not lst:\n        return 0\n    return sum(i * i for i in lst if i % 2 != 0)\n",
    "\n    if not lst:\n        return 0\n    return sum(x**2 for x in lst if x%2 == 1)\n",
    "\n    if not lst:\n        return 0\n    return sum(x**2 for x in lst if x % 2 == 1)\n",
    "\n    if not lst:\n        return 0\n    return sum(lst) ** 2 - sum(lst) ** 2 // 2\n",
    "\n    if not lst:\n        return 0\n    return sum(i * i for i in lst if i % 2 == 1)\n",
    "\n    if not lst:\n        return 0\n    else:\n        return sum(x**2 for x in lst if x % 2 != 0)\n",
    "\n    if not lst:\n        return 0\n    return sum(x * x for x in lst if x % 2 == 1)\n",
    "\n    if not lst:\n        return 0\n    return sum(x**2 for x in lst if x % 2 == 1)\n",
    "\n    if not lst:\n        return 0\n    return sum(lst) * sum(lst) - sum(lst) * sum(lst)\n\n",
    "\n    if not lst:\n        return 0\n    return sum(x * x for x in lst if x % 2 == 1)\n",
    "\n    if not lst:\n        return 0\n    return sum(lst) * sum(lst) - sum(lst) * sum(lst) // 2\n",
    "\n    if not lst:\n        return 0\n    return sum(lst) * sum(lst) - sum(lst) * sum(lst) // 2\n",
    "\n    if not lst:\n        return 0\n    return sum(x * x for x in lst if x % 2 == 1)\n",
    "\n    if not lst:\n        return 0\n    return sum(i * i for i in lst if i % 2 == 1)\n",
    "\n    if not lst:\n        return 0\n    return sum(x * x for x in lst if x % 2 == 1)\n",
    "\n    if not lst:\n        return 0\n    else:\n        return sum(lst) * sum(lst) - sum(lst) * sum(lst) - sum(lst) * sum(lst)\n"
  ]
}