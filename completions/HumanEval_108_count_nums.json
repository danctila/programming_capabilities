{
  "problem_id": "HumanEval_108_count_nums",
  "prompt": "from typing import List\n\ndef count_nums(arr: List[int]) -> int:\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([])\n    0\n    >>> count_nums([-1, 11, -11])\n    1\n    >>> count_nums([1, 1, 2])\n    3\n    \"\"\"",
  "completions": [
    "\n    return sum(map(lambda x: x % 10, arr))\n\n",
    "\n    return sum(map(lambda x: x // 10, arr))\n\n",
    "\n    return sum(map(lambda x: x % 10, arr))\n\n",
    "\n    return sum([1 if x > 0 else 0 for x in arr])\n",
    "\n    return sum(map(lambda x: x % 10, arr))\n\n",
    "\n    return sum(int(x) for x in str(arr))\n\n",
    "\n    return sum(map(lambda x: x if x > 0 else 0, arr))\n",
    "\n    return sum(map(lambda x: x % 10, arr)) > 0\n\n",
    "\n    return sum(map(lambda x: x % 10, arr))\n\n",
    "\n    return sum(map(lambda x: x % 10, arr))\n",
    "\n    return sum(map(lambda x: x % 10, arr))\n",
    "\n    return sum(map(lambda x: x % 10, arr))\n\n",
    "\n    return sum(map(lambda x: x % 10, arr))\n",
    "\n    return sum(map(lambda x: x % 10, arr))\n",
    "\n    return sum(map(lambda x: x % 10, arr))\n\n",
    "\n    return sum(1 for i in arr if i > 0)\n",
    "\n    return sum(map(lambda x: x // 10, arr))\n",
    "\n    return sum(map(lambda x: x % 10, arr))\n\n",
    "\n    return sum(map(lambda x: x > 0, arr))\n",
    "\n    return sum(map(lambda x: x % 10, arr))\n"
  ]
}