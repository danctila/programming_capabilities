{
  "problem_id": "HumanEval_56_correct_bracketing",
  "prompt": "def correct_bracketing(brackets: str) -> bool:\n    \"\"\" brackets is a string of \"<\" and \">\".\n    return True if every opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing('<')\n    False\n    >>> correct_bracketing('<>')\n    True\n    >>> correct_bracketing('<<><>>')\n    True\n    >>> correct_bracketing('><<>')\n    False\n    \"\"\"",
  "completions": [
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets_open = False\n    brackets_close = False\n    for bracket in brackets:\n        if bracket == '<':\n            brackets_open = True\n        elif bracket == '>':\n            brackets_close = True\n        else:\n            if brackets_open:\n                brackets_open = False\n            else:\n                brackets_close = False\n    return brackets_open and brackets_close\n\n",
    "\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets = brackets.split('>')\n    for bracket in brackets:\n        if bracket == '<':\n            if brackets.index(bracket) == 0:\n                return True\n        elif bracket == '>':\n            if brackets.index(bracket) == len(brackets) - 1:\n                return True\n        else:\n            return False\n\n",
    "\n    if not brackets:\n        return False\n\n    brackets = brackets.replace('<', '>')\n    brackets = brackets.replace('>', '<')\n    return brackets == brackets.replace('<', '>')\n\n    # def correct_bracketing(brackets: str) -> bool:\n    #     \"\"\" brackets is a string of \"<\" and \">\".\n    #     return True if every opening bracket has a corresponding closing bracket.\n\n    #     >>> correct_bracketing('<')\n    #     False\n    #     >>> correct_bracketing('<>')\n    #     True\n    #     >>> correct_bracketing('<<><>>')\n    #     True\n    #     >>> correct_bracketing('><<>')\n    #     False\n    #     \"\"\"\n    #     if not brackets:\n    #         return False\n    #\n    #     brackets = brackets.replace('<', '>')\n    #     brackets = brackets.replace('>', '<')\n    #     return brackets == brackets.replace('<', '>')\n\n    # def correct_bracketing(brackets: str) -> bool:\n    #     \"\"\" brackets is a string of \"<\" and \">\".\n    #     return True if every opening bracket has a corresponding closing bracket.\n\n    #     >>> correct_bracketing('<')\n    #     False\n    #     >>> correct_bracketing('<>')\n    #     True\n    #     >>> correct_bracketing('<<><>>')\n   ",
    "\n    brackets = brackets.strip()\n    brackets = brackets.split('>')\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]\n    brackets = [bracket.strip() for bracket in brackets]",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets_list = brackets.split('>')\n    for bracket in brackets_list:\n        if bracket == '<':\n            if brackets_list.index(bracket) == 0:\n                return True\n        elif bracket == '>':\n            if brackets_list.index(bracket) == len(brackets_list) - 1:\n                return True\n    return False\n\n",
    "\n    if not brackets:\n        return False\n\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>', '>')\n    brackets = brackets.replace('>', '>').replace('<', '<').replace('>',",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets_map = {\n        '<': '>',\n        '>': '<',\n    }\n    for bracket in brackets:\n        if bracket not in brackets_map:\n            return False\n        brackets_map[bracket] = brackets_map[bracket] + '>'\n    return True\n\n",
    "\n    brackets = brackets.split('>')\n    for bracket in brackets:\n        if bracket == '<':\n            if brackets.index(bracket) == 0:\n                return False\n        elif bracket == '>':\n            if brackets.index(bracket) == len(brackets) - 1:\n                return False\n        else:\n            return False\n    return True\n\n",
    "\n    brackets_map = {\n        '<': '>',\n        '>': '<'\n    }\n    for bracket in brackets:\n        if bracket not in brackets_map:\n            return False\n        brackets_map[bracket] = brackets_map[bracket] + brackets_map[bracket]\n    return True\n\n",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')",
    "\n    brackets_list = brackets.split('>')\n    for bracket in brackets_list:\n        if bracket == '<':\n            if brackets_list.index(bracket) == 0:\n                return True\n        elif bracket == '>':\n            if brackets_list.index(bracket) == len(brackets_list) - 1:\n                return True\n    return False\n\n",
    "\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')\n    brackets = brackets.replace('>', '>')\n    brackets = brackets.replace('<', '<')"
  ]
}