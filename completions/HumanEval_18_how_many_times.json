{
  "problem_id": "HumanEval_18_how_many_times",
  "prompt": "def how_many_times(string: str, substring: str) -> int:\n    \"\"\" Find how many times a given substring can be found in the original string. Count overlaping cases.\n    >>> how_many_times('', 'a')\n    0\n    >>> how_many_times('aaa', 'a')\n    3\n    >>> how_many_times('aaaa', 'aa')\n    3\n    \"\"\"",
  "completions": [
    "\n    if not string:\n        return 0\n    if not substring:\n        return 0\n    if len(string) == 0 or len(substring) == 0:\n        return 0\n    if len(string) == 1:\n        return 1\n    if len(substring) == 1:\n        return 1\n    if string[0] == substring[0]:\n        return how_many_times(string[1:], substring[1:])\n    return how_many_times(string[1:], substring) + how_many_times(string[1:], substring[1:])\n",
    "\n    if substring == '':\n        return 0\n    if substring == string:\n        return 1\n    return 1 + how_many_times(string[1:], substring[1:])\n",
    "\n    if len(string) == 0:\n        return 0\n    if len(string) == 1:\n        return 1\n    if len(string) == 2:\n        return 1 if string[0] == substring[0] else 0\n    if len(string) == 3:\n        return 1 if string[0] == substring[0] or string[1] == substring[0] else 0\n    if len(string) == 4:\n        return 1 if string[0] == substring[0] or string[1] == substring[0] or string[2] == substring[0] else 0\n    if len(string) == 5:\n        return 1 if string[0] == substring[0] or string[1] == substring[0] or string[2] == substring[0] or string[3] == substring[0] else 0\n    if len(string) == 6:\n        return 1 if string[0] == substring[0] or string[1] == substring[0] or string[2] == substring[0] or string[3] == substring[0] or string[4] == substring[0] else 0\n    if len(string) == 7:\n        return 1 if string[0] == substring",
    "\n    if not string:\n        return 0\n    if not substring:\n        return 0\n    if len(string) == 1:\n        return 1\n    if len(substring) == 1:\n        return 1\n    if substring == string[0]:\n        return 1 + how_many_times(string[1:], substring)\n    return 1 + how_many_times(string[1:], substring) + how_many_times(string[1:], substring[1:])\n\n",
    "\n    if substring == '':\n        return 0\n    if len(substring) == 1:\n        return 1\n    return 1 + how_many_times(string, substring[1:])\n\n",
    "\n    if not string:\n        return 0\n    if not substring:\n        return 1\n    return 1 + how_many_times(string[1:], substring)\n",
    "\n    return sum(1 for i in range(len(string)) if string[i] == substring)\n\n",
    "\n    if not string:\n        return 0\n    if not substring:\n        return 1\n    if string.startswith(substring):\n        return 1 + how_many_times(string[len(substring):], substring)\n    return how_many_times(string[len(substring):], substring)\n",
    "\n    if substring == '':\n        return 0\n    if string == '':\n        return 1\n    if substring == string[0]:\n        return 1\n    if substring in string:\n        return 1 + how_many_times(string[1:], substring)\n    return 0\n",
    "\n    if not string:\n        return 0\n    if not substring:\n        return 1\n    if len(string) == 1:\n        return 1\n    if len(string) == 2:\n        return 0\n    if len(string) == 3:\n        return 1\n    if len(string) == 4:\n        return 0\n    if len(string) == 5:\n        return 1\n    if len(string) == 6:\n        return 0\n    if len(string) == 7:\n        return 0\n    if len(string) == 8:\n        return 0\n    if len(string) == 9:\n        return 0\n    if len(string) == 10:\n        return 0\n    if len(string) == 11:\n        return 0\n    if len(string) == 12:\n        return 0\n    if len(string) == 13:\n        return 0\n    if len(string) == 14:\n        return 0\n    if len(string) == 15:\n        return 0\n    if len(string) == 16:\n        return 0\n    if len(string) == 17:\n        return 0\n    if len(string) == 18:\n        return 0\n    if len(string) == 19:\n        return 0\n    if len(string",
    "\n    if len(string) == 0:\n        return 0\n    if len(string) == 1:\n        return 1\n    if len(string) == 2:\n        if string[0] == substring[0]:\n            return 1\n        else:\n            return 0\n    if len(string) == 3:\n        if string[0] == substring[0] or string[1] == substring[1]:\n            return 1\n        else:\n            return 0\n    if len(string) == 4:\n        if string[0] == substring[0] or string[1] == substring[1] or string[2] == substring[2]:\n            return 1\n        else:\n            return 0\n    if len(string) == 5:\n        if string[0] == substring[0] or string[1] == substring[1] or string[2] == substring[2] or string[3] == substring[3]:\n            return 1\n        else:\n            return 0\n    if len(string) == 6:\n        if string[0] == substring[0] or string[1] == substring[1] or string[2] == substring[2] or string[3] == substring[3] or string[4] == substring[4]:\n            return 1\n        else:\n           ",
    "\n    if not string:\n        return 0\n    if not substring:\n        return 1\n    if substring == string[0]:\n        return 1 + how_many_times(string[1:], substring)\n    return how_many_times(string[1:], substring) + how_many_times(string[1:], substring[1:])\n",
    "\n    return len(string) - len(substring) + 1\n\n",
    "\n    if len(string) == 0:\n        return 0\n    if len(string) == 1:\n        return 1\n    if len(string) == 2:\n        return 1\n    if len(string) == 3:\n        return 2\n    if len(string) == 4:\n        return 3\n    if len(string) == 5:\n        return 4\n    if len(string) == 6:\n        return 5\n    if len(string) == 7:\n        return 6\n    if len(string) == 8:\n        return 7\n    if len(string) == 9:\n        return 8\n    if len(string) == 10:\n        return 9\n    if len(string) == 11:\n        return 10\n    if len(string) == 12:\n        return 11\n    if len(string) == 13:\n        return 12\n    if len(string) == 14:\n        return 13\n    if len(string) == 15:\n        return 14\n    if len(string) == 16:\n        return 15\n    if len(string) == 17:\n        return 16\n    if len(string) == 18:\n        return 17\n    if len(string) == 19:\n        return 18\n   ",
    "\n    if not string:\n        return 0\n    if not substring:\n        return 1\n    if string == substring:\n        return 1\n    if string[0] == substring[0]:\n        return 1 + how_many_times(string[1:], substring[1:])\n    return 1 + how_many_times(string[1:], substring[1:]) + how_many_times(string[1:], substring[1:])\n",
    "\n    if substring in string:\n        return 1\n    else:\n        return 0\n\n",
    "\n    if substring in string:\n        return 1\n    return 0 if substring in string else how_many_times(string, substring)\n\n",
    "\n    if substring == '':\n        return 0\n    if substring == string:\n        return 1\n    if substring in string:\n        return 1 + how_many_times(string, substring[1:])\n    return how_many_times(string, substring[1:]) + how_many_times(string, substring[1:])\n",
    "\n    if substring in string:\n        return 1 + how_many_times(string[:string.index(substring)], substring)\n    else:\n        return 0\n\n",
    "\n    if substring in string:\n        return 1\n    else:\n        return 0\n\n"
  ]
}