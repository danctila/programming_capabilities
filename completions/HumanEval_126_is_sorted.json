{
  "problem_id": "HumanEval_126_is_sorted",
  "prompt": "from typing import List\n\ndef is_sorted(lst: List[int]) -> bool:\n    \"\"\"\n    Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    >>> is_sorted([5])\n    True\n    >>> is_sorted([1, 2, 3, 4, 5])\n    True\n    >>> is_sorted([1, 3, 2, 4, 5])\n    False\n    >>> is_sorted([1, 2, 3, 4, 5, 6])\n    True\n    >>> is_sorted([1, 2, 3, 4, 5, 6, 7])\n    True\n    >>> is_sorted([1, 3, 2, 4, 5, 6, 7])\n    False\n    >>> is_sorted([1, 2, 2, 3, 3, 4])\n    True\n    >>> is_sorted([1, 2, 2, 2, 3, 4])\n    False\n    \"\"\"",
  "completions": [
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    return is_sorted(lst[1:])\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    return is_sorted(lst[1:])\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[-1]:\n        return False\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i - 1]:\n            return False\n    return True\n\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    return is_sorted(lst[1:])\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i - 1]:\n            return False\n    return True\n\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[-1]:\n        return False\n    return is_sorted(lst[1:-1])\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    return is_sorted(lst[1:])\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i - 1]:\n            return False\n    return True\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    else:\n        return is_sorted(lst[1:])\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i - 1]:\n            return False\n    return True\n\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[-1]:\n        return False\n    return is_sorted(lst[1:-1])\n\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[-1]:\n        return False\n    return is_sorted(lst[1:-1])\n",
    "\n    return all(i <= j for i, j in zip(lst, lst[1:]))\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    return is_sorted(lst[1:])\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    return is_sorted(lst[1:])\n",
    "\n    return sorted(lst) == lst\n\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i - 1]:\n            return False\n    return True\n",
    "\n    if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i - 1]:\n            return False\n    return True\n"
  ]
}