{
  "problem_id": "HumanEval_92_any_int",
  "prompt": "def any_int(x: float, y: float, z: float) -> bool:\n    \"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum of the other two, and all numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n    >>> any_int(5, 2, 7)\n    True\n    \n    >>> any_int(3, 2, 2)\n    False\n\n    >>> any_int(3, -2, 1)\n    True\n    \n    >>> any_int(3.6, -2.2, 2)\n    False\n  \n\n    \n    \"\"\"",
  "completions": [
    "\n    return (x + y == z) and (isinstance(x, int) and isinstance(y, int) and isinstance(z, int))\n",
    "\n    return any(x == y + z for x, y, z in zip(x, y, z)) and all(isinstance(x, int) for x in x)\n\n",
    "\n    return (x + y == z) and (isinstance(x, int) and isinstance(y, int) and isinstance(z, int))\n",
    "\n    return any([x == y + z for x, y, z in zip(x, y, z)])\n",
    "\n    if x == y and y == z and z == x:\n        return True\n    else:\n        return False\n\n",
    "\n    if x == y and y == z and z == x:\n        return True\n    else:\n        return False\n",
    "\n    return (x + y == z) and (isinstance(x, int) and isinstance(y, int) and isinstance(z, int))\n\n",
    "\n    if (x == y + z) and (x == y + z) and (x == y + z):\n        return True\n    else:\n        return False\n",
    "\n    return (x + y) == z and all(isinstance(i, int) for i in [x, y, z])\n",
    "\n    if (x == y) and (x == z):\n        return True\n    elif (x == y) and (y == z):\n        return True\n    elif (x == y) and (z == 2):\n        return True\n    elif (x == y) and (z == 1):\n        return True\n    elif (x == y) and (z == 0):\n        return True\n    elif (x == y) and (z == -1):\n        return True\n    elif (x == y) and (z == 2):\n        return True\n    elif (x == y) and (z == 3):\n        return True\n    elif (x == y) and (z == 4):\n        return True\n    elif (x == y) and (z == 5):\n        return True\n    elif (x == y) and (z == 6):\n        return True\n    elif (x == y) and (z == 7):\n        return True\n    elif (x == y) and (z == 8):\n        return True\n    elif (x == y) and (z == 9):\n        return True\n    elif (x == y) and (z == 10):\n        return True\n    elif (x == y) and (z == 11):\n        return True\n    elif (x == y) and (z == 12):\n        return True\n    elif (x == y) and (z",
    "\n    if x == y and y == z and z == x:\n        return True\n    else:\n        return False\n",
    "\n    return any(x == y + z for x, y, z in zip(x, y, z)) and all(isinstance(x, int) for x in x)\n\n",
    "\n    return (x + y) == z and (x % 1 == 0) and (y % 1 == 0) and (z % 1 == 0)\n\n",
    "\n    return any([x == y + z for x, y, z in zip(x, y, z)])\n\n",
    "\n    return any(x == y + z for x, y, z in zip(x, y, z)) and all(isinstance(x, int) for x in x)\n",
    "\n    return any([x == y + z for x, y, z in zip(x, y, z)]) and all(isinstance(x, int) for x in [x for x in x if x.is_integer()])\n",
    "\n    if (x + y) == z:\n        return True\n    else:\n        return False\n\n# Your function should take 3 floats as input and return a boolean\n# representing whether or not the 3 numbers are all integers.\n\n# Test Cases\n# any_int(5, 2, 7)\n# True\n# any_int(3, 2, 2)\n# False\n# any_int(3, -2, 1)\n# True\n# any_int(3.6, -2.2, 2)\n# False\n\n# Notes\n# You can use the following functions:\n# is_int()\n# is_float()\n# is_str()\n# is_bool()\n# is_list()\n# is_tuple()\n# is_set()\n# is_dict()\n# is_none()\n# is_bool()\n# is_int()\n# is_float()\n# is_str()\n# is_list()\n# is_tuple()\n# is_set()\n# is_dict()\n# is_none()\n# is_bool()\n# is_int()\n# is_float()\n# is_str()\n# is_list()\n# is_tuple()\n# is_set()\n# is_dict()\n# is_none",
    "\n    return any(x == y + z for x, y, z in zip(x, y, z))\n",
    "\n    if x == y and y == z and z == x:\n        return True\n    else:\n        return False\n",
    "\n    if x == y and y == z and z == x:\n        return True\n    else:\n        return False\n\n# 1.2"
  ]
}