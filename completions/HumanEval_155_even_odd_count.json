{
  "problem_id": "HumanEval_155_even_odd_count",
  "prompt": "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int, int]:\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"",
  "completions": [
    "\n    return (num // 10, num % 10)\n",
    "\n    return (num // 10, num % 10)\n",
    "\n    return (num // 10, num % 10)\n",
    "\n    return (num // 10, num % 10)\n",
    "\n    return (num // 10, num % 10)\n",
    "\n    return (num // 10, num % 10)\n",
    "\n    return (num // 10, num % 10)\n",
    "\n    return (num // 10, num % 10)\n",
    "\n    return (num // 10, num % 10)\n",
    "\n    if num < 0:\n        return (0, 0)\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 1)\n    if num % 2 == 0:\n        return (1, 0)\n    if num % 2 != 0:\n        return (0, 1)\n",
    "\n    if num < 0:\n        return (0, -1)\n    if num == 0:\n        return (0, 0)\n    return (num // 10, num % 10)\n",
    "\n    if num < 0:\n        return (0, 0)\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 0)\n    if num % 2 == 0:\n        return (1, 1)\n    return (0, 0)\n",
    "\n    if num < 0:\n        return (-1, -1)\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 1)\n    if num % 2 == 0:\n        return (0, 1)\n    return (1, 0)\n",
    "\n    return (num // 10, num % 10)\n",
    "\n    if num == 0:\n        return (0, 0)\n    if num < 0:\n        return (0, 1)\n    if num == 1:\n        return (1, 0)\n    if num == 2:\n        return (0, 1)\n    if num == 3:\n        return (1, 1)\n    if num == 4:\n        return (0, 2)\n    if num == 5:\n        return (1, 2)\n    if num == 6:\n        return (0, 3)\n    if num == 7:\n        return (1, 3)\n    if num == 8:\n        return (0, 4)\n    if num == 9:\n        return (1, 4)\n    if num == 10:\n        return (0, 5)\n    if num == 11:\n        return (1, 5)\n    if num == 12:\n        return (0, 6)\n    if num == 13:\n        return (1, 6)\n    if num == 14:\n        return (0, 7)\n    if num == 15:\n        return (1, 7)\n    if num == 16:\n        return (0, 8)\n    if num == 17:\n        return (1, 8)\n    if num == 18",
    "\n    return (num // 10, num % 10)\n",
    "\n    if num < 0:\n        return (0, -1)\n    if num == 0:\n        return (0, 1)\n    if num == 1:\n        return (1, 0)\n    if num == 2:\n        return (0, 1)\n    if num == 3:\n        return (1, 0)\n    if num == 4:\n        return (1, 1)\n    if num == 5:\n        return (0, 1)\n    if num == 6:\n        return (1, 0)\n    if num == 7:\n        return (0, 1)\n    if num == 8:\n        return (1, 1)\n    if num == 9:\n        return (0, 1)\n    return (0, 0)\n",
    "\n    return (num // 10, num % 10)\n",
    "\n    return (num // 10, num % 10)\n",
    "\n    even_count = 0\n    odd_count = 0\n    while num > 0:\n        if num % 10 == 0:\n            num //= 10\n            even_count += 1\n        else:\n            odd_count += 1\n    return even_count, odd_count\n"
  ]
}