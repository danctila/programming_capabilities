{
  "problem_id": "HumanEval_43_pairs_sum_to_zero",
  "prompt": "from typing import List\n\ndef pairs_sum_to_zero(l: List[int]) -> bool:\n    \"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n    it returns True if there are two distinct elements in the list that\n    sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1, 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"",
  "completions": [
    "\n    for i in range(len(l) - 1):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l) - 1):\n        if l[i] + l[i + 1] == 0:\n            return True\n    return False\n",
    "\n    for i in range(len(l) - 1):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l) - 1):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l) - 1):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return True\n    if l[0] == l[-1]:\n        return False\n    for i in range(len(l) - 1):\n        if l[i] + l[i + 1] == 0:\n            return True\n    return False\n\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l) - 1):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    for i in range(len(l)):\n        for j in range(i + 1, len(l)):\n            if l[i] + l[j] == 0:\n                return True\n    return False\n",
    "\n    # TODO: Implement the function\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n    # return False\n   "
  ]
}